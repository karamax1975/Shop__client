[{"D:\\lesson\\servRasp\\client\\src\\index.js":"1","D:\\lesson\\servRasp\\client\\src\\App.js":"2","D:\\lesson\\servRasp\\client\\src\\pages\\index.js":"3","D:\\lesson\\servRasp\\client\\src\\pages\\auth.js":"4","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\inputText.js":"5","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Buttons\\button.js":"6","D:\\lesson\\servRasp\\client\\src\\pages\\registration.js":"7","D:\\lesson\\servRasp\\client\\src\\lib\\useAuth.js":"8","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\formRegistration.js":"9","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\formAuth.js":"10","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Template\\header\\header.js":"11","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Template\\header\\userLink\\userLink.js":"12","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Template\\footer\\footer.js":"13","D:\\lesson\\servRasp\\client\\src\\reducers\\root_reducer.js":"14","D:\\lesson\\servRasp\\client\\src\\reducers\\product_reducer.js":"15","D:\\lesson\\servRasp\\client\\src\\reducers\\Types.js":"16","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Buttons\\actionButton.js":"17","D:\\lesson\\servRasp\\client\\src\\reducers\\user_reducer.js":"18","D:\\lesson\\servRasp\\client\\src\\actions\\user\\user_actions.js":"19","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\adminTemplate\\header\\header.js":"20","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\adminTemplate\\header\\adminTopHeader.js":"21","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\adminTemplate\\header\\adminBottomHeader.js":"22","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\adminTemplate\\adminToolsNavbar.js":"23","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Buttons\\smallButton.js":"24","D:\\lesson\\servRasp\\client\\src\\pages\\adminPages\\admin.js":"25","D:\\lesson\\servRasp\\client\\src\\lib\\confirmationUser.js":"26","D:\\lesson\\servRasp\\client\\src\\actions\\product\\action_addProduct.js":"27","D:\\lesson\\servRasp\\client\\src\\reducers\\r__adminPage.js":"28","D:\\lesson\\servRasp\\client\\src\\actions\\adminPage\\action_adminPage.js":"29","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Titles\\FormTitle.js":"30","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Titles\\titleWithButton.js":"31","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Titles\\h2_title.js":"32","D:\\lesson\\servRasp\\client\\src\\config.js":"33","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\inputUniversal.js":"34","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\checkbox.js":"35","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Buttons\\bigButton.js":"36","D:\\lesson\\servRasp\\client\\src\\pages\\adminPages\\listProducts.js":"37","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\listProducts.js":"38","D:\\lesson\\servRasp\\client\\src\\actions\\listProduct_action.js":"39","D:\\lesson\\servRasp\\client\\src\\reducers\\listProduct_reducer.js":"40","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\listProducts_ItemProduct.js":"41","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\editProduct\\editProduct.js":"42","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\editProduct\\product.js":"43","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\textArea.js":"44","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_layout.js":"45","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\multiInput.js":"46","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\editProduct\\promo.js":"47","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Lists\\selectList.js":"48","D:\\lesson\\servRasp\\client\\src\\api\\api.js":"49","D:\\lesson\\servRasp\\client\\src\\api\\endpoint.js":"50","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\editProduct\\galeryPreviews.js":"51","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\inputGallery.js":"52","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\inputPreview.js":"53","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\editProduct\\categorys.js":"54","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Titles\\titleComposite.js":"55","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\addProduct\\addProduct.js":"56","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\filtersListProduct.js":"57","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\findProduct.js":"58","D:\\lesson\\servRasp\\client\\src\\pages\\adminPages\\catalog.js":"59","D:\\lesson\\servRasp\\client\\src\\reducers\\catalog_reducer.js":"60","D:\\lesson\\servRasp\\client\\src\\actions\\catalog\\catalog_action.js":"61","D:\\lesson\\servRasp\\client\\src\\pages\\adminPages\\catalog\\catalogList\\catalogList.js":"62","D:\\lesson\\servRasp\\client\\src\\pages\\adminPages\\catalog\\catalogList\\catalogItem.js":"63"},{"size":607,"mtime":1613805838503,"results":"64","hashOfConfig":"65"},{"size":616,"mtime":1613155717319,"results":"66","hashOfConfig":"65"},{"size":361,"mtime":1610621333741,"results":"67","hashOfConfig":"65"},{"size":2268,"mtime":1610992974118,"results":"68","hashOfConfig":"65"},{"size":1171,"mtime":1611584290471,"results":"69","hashOfConfig":"65"},{"size":420,"mtime":1610103290641,"results":"70","hashOfConfig":"65"},{"size":1464,"mtime":1610621360965,"results":"71","hashOfConfig":"65"},{"size":612,"mtime":1609772530857,"results":"72","hashOfConfig":"65"},{"size":3188,"mtime":1610221447446,"results":"73","hashOfConfig":"65"},{"size":1952,"mtime":1610221420267,"results":"74","hashOfConfig":"65"},{"size":1992,"mtime":1609953193963,"results":"75","hashOfConfig":"65"},{"size":333,"mtime":1609963875400,"results":"76","hashOfConfig":"65"},{"size":563,"mtime":1609877864429,"results":"77","hashOfConfig":"65"},{"size":399,"mtime":1615364329020,"results":"78","hashOfConfig":"65"},{"size":9922,"mtime":1613727068665,"results":"79","hashOfConfig":"65"},{"size":3396,"mtime":1616094339040,"results":"80","hashOfConfig":"65"},{"size":432,"mtime":1613564580528,"results":"81","hashOfConfig":"65"},{"size":535,"mtime":1612202041922,"results":"82","hashOfConfig":"65"},{"size":196,"mtime":1612202124337,"results":"83","hashOfConfig":"65"},{"size":301,"mtime":1609952384786,"results":"84","hashOfConfig":"65"},{"size":945,"mtime":1609952540964,"results":"85","hashOfConfig":"65"},{"size":911,"mtime":1609957282422,"results":"86","hashOfConfig":"65"},{"size":769,"mtime":1614515539871,"results":"87","hashOfConfig":"65"},{"size":1428,"mtime":1610972236529,"results":"88","hashOfConfig":"65"},{"size":2261,"mtime":1614515403626,"results":"89","hashOfConfig":"65"},{"size":360,"mtime":1610371932229,"results":"90","hashOfConfig":"65"},{"size":5491,"mtime":1613734609256,"results":"91","hashOfConfig":"65"},{"size":355,"mtime":1610611098771,"results":"92","hashOfConfig":"65"},{"size":182,"mtime":1613725839763,"results":"93","hashOfConfig":"65"},{"size":216,"mtime":1611826478781,"results":"94","hashOfConfig":"65"},{"size":462,"mtime":1611921251403,"results":"95","hashOfConfig":"65"},{"size":159,"mtime":1609960484357,"results":"96","hashOfConfig":"65"},{"size":1917,"mtime":1614152120649,"results":"97","hashOfConfig":"65"},{"size":303,"mtime":1613654540547,"results":"98","hashOfConfig":"65"},{"size":339,"mtime":1611924853492,"results":"99","hashOfConfig":"65"},{"size":231,"mtime":1611904402596,"results":"100","hashOfConfig":"65"},{"size":2327,"mtime":1613721280212,"results":"101","hashOfConfig":"65"},{"size":611,"mtime":1614172018699,"results":"102","hashOfConfig":"65"},{"size":1452,"mtime":1614175498157,"results":"103","hashOfConfig":"65"},{"size":3131,"mtime":1614175315440,"results":"104","hashOfConfig":"65"},{"size":3220,"mtime":1614151997494,"results":"105","hashOfConfig":"65"},{"size":3176,"mtime":1613805569409,"results":"106","hashOfConfig":"65"},{"size":5442,"mtime":1614152235755,"results":"107","hashOfConfig":"65"},{"size":737,"mtime":1613652512291,"results":"108","hashOfConfig":"65"},{"size":490,"mtime":1613735868659,"results":"109","hashOfConfig":"65"},{"size":2203,"mtime":1613303324997,"results":"110","hashOfConfig":"65"},{"size":3895,"mtime":1615911177278,"results":"111","hashOfConfig":"65"},{"size":2156,"mtime":1612953134632,"results":"112","hashOfConfig":"65"},{"size":1293,"mtime":1613221917116,"results":"113","hashOfConfig":"65"},{"size":1537,"mtime":1616094765969,"results":"114","hashOfConfig":"65"},{"size":1067,"mtime":1613821152668,"results":"115","hashOfConfig":"65"},{"size":1373,"mtime":1613311161050,"results":"116","hashOfConfig":"65"},{"size":730,"mtime":1613310600392,"results":"117","hashOfConfig":"65"},{"size":2572,"mtime":1613819376559,"results":"118","hashOfConfig":"65"},{"size":331,"mtime":1613723458702,"results":"119","hashOfConfig":"65"},{"size":2873,"mtime":1613727383806,"results":"120","hashOfConfig":"65"},{"size":914,"mtime":1614158557910,"results":"121","hashOfConfig":"65"},{"size":1746,"mtime":1614171981124,"results":"122","hashOfConfig":"65"},{"size":680,"mtime":1615811631575,"results":"123","hashOfConfig":"65"},{"size":4244,"mtime":1616093969594,"results":"124","hashOfConfig":"65"},{"size":2161,"mtime":1616095578897,"results":"125","hashOfConfig":"65"},{"size":2947,"mtime":1616095474366,"results":"126","hashOfConfig":"65"},{"size":2857,"mtime":1615977754987,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1u1bfav",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"130"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"130"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"130"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"130"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"247","usedDeprecatedRules":"130"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"130"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"130"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"130"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"130"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"130"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"130"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"130"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"130"},"D:\\lesson\\servRasp\\client\\src\\index.js",[],["284","285"],"D:\\lesson\\servRasp\\client\\src\\App.js",[],"D:\\lesson\\servRasp\\client\\src\\pages\\index.js",[],"D:\\lesson\\servRasp\\client\\src\\pages\\auth.js",["286"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\nimport Header from '../Components/Desktop/Template/header/header';\r\nimport Footer from '../Components/Desktop/Template/footer/footer';\r\nimport FormAuth from '../Components/Desktop/Forms/formAuth';\r\nimport './auth.css';\r\n\r\nexport default function Auth() {\r\n\r\n  const history = useHistory();\r\n  const [feedback, setFeedBack] = useState(null);\r\n  const [cookies, setCookie, removeCookie] = useCookies(['userData']);\r\n\r\n  async function onsubmit(ID, password) {\r\n    const user = {\r\n      ID,\r\n      password\r\n    }\r\n    const responce = await fetch('/api/auth', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    })\r\n    if (responce.status === 200) {\r\n      setFeedBack(responce.status)\r\n      const rezult = await responce.json();\r\n      const { token, statusUser } = rezult;\r\n      // console.log(token, statusUser);\r\n      if (!cookies.name && token) {\r\n        setCookie('name', token, { samesite: true })\r\n      }\r\n      history.push(`/${statusUser}`)\r\n    }\r\n    else setFeedBack(responce.status)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ---- temp fix bag\r\n    if (cookies.name === 'undefined') {\r\n      removeCookie('name');\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='container auth-page'>\r\n        <div className='row'>\r\n          <h1>Please sign in</h1>\r\n          <div className='col-lg-4'>\r\n            <FormAuth action={onsubmit} feedbackForm={feedback} />\r\n            <div className='user-link'>\r\n              <Link to='/registration'>\r\n                <span>Don't have ID? Create one now.</span>\r\n              </Link>\r\n              <Link to='/'>\r\n                <span>Forgot you ID or password?</span>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <div className='auth-help'>\r\n              <h3>Need some help? Call now <a href='tel:020 8891 5321'>020 8891 5321</a></h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\inputText.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Buttons\\button.js",[],"D:\\lesson\\servRasp\\client\\src\\pages\\registration.js",[],"D:\\lesson\\servRasp\\client\\src\\lib\\useAuth.js",["287"],"import { useState, useCallback, useEffect } from 'react';\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n\r\n  const login = useCallback((jwtToken) => {\r\n    setToken(jwtToken);\r\n\r\n    localStorage.setItem(storageName, jwtToken)\r\n  }, [])\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(storageName)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.setItem(storageName, token);\r\n    if (data && data.token) {\r\n      login(data.token)\r\n    }\r\n  }, [login])\r\n\r\n  return { login, logout }\r\n} ",["288","289"],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\formRegistration.js",["290"],"import React, { useEffect, useState } from 'react';\r\nimport InputText from '../Inputs/inputText';\r\nimport Button from '../Buttons/button';\r\nimport './formRegistration.css';\r\n\r\nexport default function FormRegistration({ action, feedback }) {\r\n\r\n\r\n\r\n  const [id, setId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [validId, setValidId] = useState(true);\r\n  const [validPassword, setValidPassword] = useState(true);\r\n  const [idTextAlert, setIdTextAlert] = useState('');\r\n  const [passwordTextAlert, setPasswordTextAlert] = useState('');\r\n  const [confirmation, setConfirmation] = useState('')\r\n  const [clearForm, setClearForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (feedback === 401) {\r\n      setValidPassword(false);\r\n      setValidId(false);\r\n      setPasswordTextAlert('Ошибка заполнения формы');\r\n      setIdTextAlert('Ошибка заполнения формы')\r\n    }\r\n    if (feedback === 200) {\r\n      setClearForm(true)\r\n      setValidPassword(true);\r\n      setValidId(true)\r\n    }\r\n  }, [feedback])\r\n\r\n\r\n  function getLogin(id) {\r\n    setId(id)\r\n  }\r\n  function validateEmail(email) {\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    return re.test(email);\r\n  }\r\n\r\n  function getPassword(password) {\r\n    setPassword(password)\r\n\r\n  }\r\n  function ConfirmationPassword(password) {\r\n    setConfirmation(password)\r\n  }\r\n\r\n  function confirm(e) {\r\n    e.preventDefault();\r\n    if (password.length < 6) {\r\n      setValidPassword(false);\r\n      setPasswordTextAlert('Пароль должен содержать не менее 7 символов');\r\n    }\r\n    else if (password.length > 0 && password.length > 6) {\r\n      setValidPassword(true);\r\n      setPasswordTextAlert('');\r\n    }\r\n    if (!validateEmail(id)) {\r\n      setValidId(false)\r\n      setIdTextAlert('Неправильный email адрес')\r\n    }\r\n    else {\r\n      setValidId(true)\r\n      setIdTextAlert('');\r\n      action(id, password, confirmation)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => confirm(e)} className='formAuth'>\r\n      <InputText\r\n        type='email'\r\n        placeholder='Введите Ваш ID'\r\n        important={true}\r\n        alert={idTextAlert}\r\n        state={validId}\r\n        action={getLogin}\r\n        clearValue={clearForm}\r\n      />\r\n      <InputText\r\n        type='password'\r\n        placeholder='Пароль'\r\n        important={true}\r\n        alert={passwordTextAlert}\r\n        state={validPassword}\r\n        action={getPassword}\r\n        clearValue={clearForm}\r\n      />\r\n      <InputText\r\n        type='password'\r\n        placeholder='Подтверждение пароля'\r\n        important={true}\r\n        alert={passwordTextAlert}\r\n        state={validPassword}\r\n        action={ConfirmationPassword}\r\n        clearValue={clearForm}\r\n      />\r\n      <p className='formAuth-infoText'>Ваш ID - это адрес Вашей электронной почты, c которым Вы будете зарегистрированны в системе.</p>\r\n      <Button\r\n        type='submit'\r\n        text='Подтвердить'\r\n        object={null}\r\n        style='sea'\r\n      />\r\n    </form>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\formAuth.js",["291"],"import React, { useEffect, useState } from 'react';\r\nimport InputText from '../../Desktop/Inputs/inputText'\r\nimport Button from '../Buttons/button';\r\n\r\n\r\nexport default function FormAuth({ action, feedbackForm }) {\r\n\r\n  const [id, setId] = useState(null);\r\n  const [password, setPassword] = useState(null)\r\n  const [validId, setValidId] = useState(true);\r\n  const [validPassword, setValidPassword] = useState(true);\r\n  const [feedbackText, setFeedBackText] = useState(null);\r\n  const [clearForm, setClearForm] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if (feedbackForm === 401 || feedbackForm === 400) {\r\n      setValidId(false)\r\n      setValidPassword(false)\r\n      setFeedBackText('Invalid ID')\r\n      setClearForm(false)\r\n    }\r\n    if (feedbackForm === 200) {\r\n      setClearForm(true)\r\n      setValidId(true)\r\n      setValidPassword(true)\r\n    }\r\n\r\n  }, [feedbackForm])\r\n\r\n  function getLogin(id) {\r\n    setId(id)\r\n  }\r\n\r\n  function getPassword(pas) {\r\n    setPassword(pas)\r\n  }\r\n\r\n  function getData(e) {\r\n    e.preventDefault();\r\n    action(id, password);\r\n  }\r\n\r\n  return (\r\n    <form className='formAuth' onSubmit={(e) => getData(e)}>\r\n      {feedbackForm\r\n        ? <div className='formAuth__alert'>{feedbackText}</div>\r\n        : ''\r\n      }\r\n      <InputText\r\n        type='email'\r\n        placeholder='Enter your ID'\r\n        important={true}\r\n        alert={''}\r\n        state={validId}\r\n        action={getLogin}\r\n        clearValue={clearForm}\r\n      />\r\n      <InputText\r\n        type='password'\r\n        placeholder='Password'\r\n        important={true}\r\n        alert={''}\r\n        state={validPassword}\r\n        action={getPassword}\r\n        clearValue={clearForm}\r\n      />\r\n      <p className='formAuth-infoText'>Your ID is your email address with which you registered in the system.</p>\r\n      <Button\r\n        type='submit'\r\n        text='Sign in'\r\n        object={null}\r\n        style='sea'\r\n      />\r\n    </form>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Template\\header\\header.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Template\\header\\userLink\\userLink.js",["292"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './userLink.css'\r\n\r\nexport default function UserLink({ nameLink, linkUrl, iconUrl }) {\r\n\r\n  return (\r\n    <Link to={`/${linkUrl}`} className='header__userLink'>\r\n      <img src={`/img/${iconUrl}`}></img>\r\n      <span>{nameLink}</span>\r\n    </Link>\r\n  )\r\n} ","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Template\\footer\\footer.js",[],"D:\\lesson\\servRasp\\client\\src\\reducers\\root_reducer.js",[],"D:\\lesson\\servRasp\\client\\src\\reducers\\product_reducer.js",[],"D:\\lesson\\servRasp\\client\\src\\reducers\\Types.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Buttons\\actionButton.js",["293"],"import React from 'react';\r\nimport './actionButton.css';\r\n\r\nexport function ActionButton({ name, action, style, icon }) {\r\n\r\n  let img = <img src={`/img/${icon}`}></img>\r\n\r\n  if (!icon) {\r\n    img = ''\r\n  }\r\n  return (\r\n    <button className={`btn-round ${style}`}\r\n      onClick={action}\r\n      type='button'>\r\n      <div className='btn-round__icon'>\r\n        {img}\r\n      </div>\r\n      <span>{name}</span>\r\n\r\n    </button>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\reducers\\user_reducer.js",[],"D:\\lesson\\servRasp\\client\\src\\actions\\user\\user_actions.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\adminTemplate\\header\\header.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\adminTemplate\\header\\adminTopHeader.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\adminTemplate\\header\\adminBottomHeader.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\adminTemplate\\adminToolsNavbar.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Buttons\\smallButton.js",[],"D:\\lesson\\servRasp\\client\\src\\pages\\adminPages\\admin.js",["294"],"import React, { useEffect } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { _getUserId } from '../../actions/user/user_actions';\r\nimport AdminHeader from '../../Components/Desktop/adminTemplate/header/header';\r\nimport AdminToolsNavbar from '../../Components/Desktop/adminTemplate/adminToolsNavbar'\r\nimport ListProducts from '../../pages/adminPages/listProducts';\r\nimport Catalog from './catalog'\r\n\r\n\r\n\r\nfunction Admin() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const [cookies, removeCookie] = useCookies(['userData']);\r\n  const { renderSection } = useSelector(state => state.adminPage);\r\n\r\n  async function auth(controller, cookies) {\r\n    const response = await fetch('api/login', {\r\n      method: 'POST',\r\n      Authorization: `Bearer ${cookies.name}`,\r\n      signal: controller.signal\r\n    })\r\n    if (response.ok) {\r\n      return await response.json();\r\n    }\r\n    else return false\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    auth(ac, cookies).then(data => {\r\n      if (data) {\r\n        dispatch(_getUserId(data.id, data.status))\r\n      }\r\n      else if (cookies.name) {\r\n        removeCookie('name')\r\n        history.push('/auth')\r\n      }\r\n      else history.push('/auth');\r\n    })\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function UIRender() {\r\n    switch (renderSection) {\r\n      case 'Catalog':\r\n        return <Catalog />\r\n      case 'Products':\r\n        return <ListProducts />\r\n      default:\r\n        return '';\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    cookies.name\r\n      ?\r\n      <div>\r\n        <AdminHeader />\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-lg-3'>\r\n              <AdminToolsNavbar />\r\n            </div>\r\n            <div className='col-lg-9'>\r\n              {UIRender()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      : <Redirect to='/' />\r\n\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (store) => {\r\n  const { userStore } = store;\r\n  return { userStore }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Admin)","D:\\lesson\\servRasp\\client\\src\\lib\\confirmationUser.js",[],["295","296"],"D:\\lesson\\servRasp\\client\\src\\actions\\product\\action_addProduct.js",["297","298"],"import {\r\n  // ----------------------------------- create product\r\n  ADD_PRODUCT__PRODUCT_CREATE,\r\n  ADD_PRODUCT__CONFIRM_FORM,\r\n  // ---------------------------------- edit\r\n  EDIT_PRODUCT__LOAD_PRODUCT,\r\n  EDIT_PRODUCT__EDIT,\r\n  EDIT_PRODUCT__PRELOADER_IMG,\r\n  EDIT_PRODUCT__FLAG_CATEGORY,\r\n  EDIT_PRODUCT__LOAD_CATEGORY,\r\n  EDIT_PRODUCT__CATEGORY_DROP,\r\n  EDIT_PRODUCT__ADD_NEW_CATEGORY,\r\n  EDIT_PRODUCT__ADD_NAME_NEW_CATEGORY,\r\n  EDIT_PRODUCT__ADD_NEW_IMG_GALERY_PREVIEW,\r\n  EDIT_PRODUCT__GALERY_DELETE_IMG,\r\n  EDIT_PRODUCT__ADD_DETAIL,\r\n  EDIT_PRODUCT__ADD_NEW_DETAIL,\r\n  EDIT_PRODUCT__EDIT_DETAIL,\r\n  EDIT_PRODUCT__DELETE_DETAIL,\r\n  EDIT_PRODUCT__ADD_NEW_PROMO,\r\n  EDIT_PRODUCT__PROMO_SET_DISCOUNT,\r\n  EDIT_PRODUCT__LOAD_LIST_PROMO,\r\n  EDIT_PRODUCT__SELECT_PROMO,\r\n  EDIT_PRODUCT__DEL_ITEM_PROMO,\r\n  EDIT_PRODUCT__CANCEL_EDIT,\r\n  EDIT_PRODUCT__UPDATE_PRODUCT,\r\n  EDIT_PRODUCT__ADD_PREVIEW_IMG\r\n\r\n} from '../../reducers/Types';\r\n\r\nimport { UPDATE_PRODUCT, GET_CHOICE, GET_CATEGORY, ADD_CATEGORY, DELETE_IMG, UPLOAD_IMG, CREATE_PRODUCT } from '../../api/endpoint';\r\nimport API from '../../api/api'\r\n\r\n\r\n\r\n\r\nexport function _productCreate(flag) {\r\n  return {\r\n    type: ADD_PRODUCT__PRODUCT_CREATE,\r\n    payload: flag\r\n  }\r\n}\r\n\r\nexport function _confirmCreateProduct(obj) {\r\n  return async dispatch => {\r\n    const response = await API.fetch(CREATE_PRODUCT, obj);\r\n    if (response.status) dispatch({ type: ADD_PRODUCT__CONFIRM_FORM })\r\n  }\r\n}\r\n\r\n// -----------------------------------------------------------\r\n\r\nexport function _addPreviewImg(obj) {\r\n  return async dispatch => {\r\n    const { oldImg, newImg } = obj\r\n    //включаю прелоадер\r\n    dispatch({ type: EDIT_PRODUCT__PRELOADER_IMG, payload: true })\r\n    const response = await API.fetch(UPLOAD_IMG, newImg);\r\n    if (response.status) {\r\n      dispatch({\r\n        type: EDIT_PRODUCT__ADD_PREVIEW_IMG, payload: {\r\n          oldImg,\r\n          newImg: response.file\r\n        }\r\n      })\r\n      dispatch({ type: EDIT_PRODUCT__PRELOADER_IMG, payload: false })\r\n    }\r\n  }\r\n}\r\n\r\nexport function _updateProduct(data) {\r\n  return async dispatch => {\r\n    const response = await API.fetch(UPDATE_PRODUCT, data)\r\n    if (response.status) {\r\n      dispatch({ type: EDIT_PRODUCT__UPDATE_PRODUCT, payload: true })\r\n    }\r\n    else dispatch({ type: EDIT_PRODUCT__UPDATE_PRODUCT, payload: false })\r\n  }\r\n\r\n}\r\n\r\nexport function _cancelEdit(arrImg) {\r\n  return async dispatch => {\r\n    if (arrImg.length > 0) {\r\n      const response = await API.fetch(DELETE_IMG, arrImg);\r\n    }\r\n    dispatch({ type: EDIT_PRODUCT__CANCEL_EDIT })\r\n  }\r\n}\r\n\r\nexport function _delItemPromo(name) {\r\n  return { type: EDIT_PRODUCT__DEL_ITEM_PROMO, payload: name }\r\n}\r\n\r\nexport function _selectPromo(_id) {\r\n  return { type: EDIT_PRODUCT__SELECT_PROMO, payload: _id }\r\n}\r\n\r\nexport function _loadListPromo() {\r\n  return async dispatch => {\r\n    const response = await API.fetch(GET_CHOICE)\r\n    if (response) dispatch({ type: EDIT_PRODUCT__LOAD_LIST_PROMO, payload: response })\r\n  }\r\n}\r\nexport function _promo_SetDiscount(number) {\r\n  const itsNumber = parseInt(number)\r\n  if (itsNumber !== NaN)\r\n    return { type: EDIT_PRODUCT__PROMO_SET_DISCOUNT, payload: number }\r\n}\r\n\r\nexport function _promo_addNewDiscount(name, status) {\r\n  return {\r\n    type: EDIT_PRODUCT__ADD_NEW_PROMO,\r\n    payload: {\r\n      name,\r\n      status\r\n    }\r\n  }\r\n}\r\n\r\nexport function _deleteDetail(id) {\r\n  return { type: EDIT_PRODUCT__DELETE_DETAIL, payload: id }\r\n}\r\n\r\nexport function _editDetail(id, obj) {\r\n  return { type: EDIT_PRODUCT__EDIT_DETAIL, payload: { id, obj } }\r\n}\r\n\r\nexport function _addNewDetail(obj) {\r\n  return {\r\n    type: EDIT_PRODUCT__ADD_NEW_DETAIL,\r\n    payload: obj\r\n  }\r\n}\r\n\r\nexport function _deleteImgInGalery(name) {\r\n  return async dispatch => {\r\n    dispatch({ type: EDIT_PRODUCT__GALERY_DELETE_IMG, payload: name })\r\n  }\r\n\r\n}\r\n\r\nexport function _addDetail() {\r\n  return {\r\n    type: EDIT_PRODUCT__ADD_DETAIL\r\n  }\r\n}\r\n\r\nexport function _addNameNewCategory(name) {\r\n  return { type: EDIT_PRODUCT__ADD_NAME_NEW_CATEGORY, payload: name }\r\n}\r\n\r\nexport function _addNewImgGaleryPreviews(newImg) {\r\n  const arrayImg = []\r\n  return async dispatch => {\r\n    const response = await API.fetch(UPLOAD_IMG, newImg);\r\n    if (response.status) {\r\n      arrayImg.push(response.file);\r\n      dispatch({ type: EDIT_PRODUCT__ADD_NEW_IMG_GALERY_PREVIEW, payload: arrayImg })\r\n    }\r\n  }\r\n}\r\n\r\nexport function _addCategory(name) {\r\n  return async dispatch => {\r\n    const response = await API.fetch(ADD_CATEGORY, name);\r\n    if (response.status) {\r\n      dispatch({ type: EDIT_PRODUCT__ADD_NEW_CATEGORY, payload: response.newCategory })\r\n      dispatch({ type: EDIT_PRODUCT__FLAG_CATEGORY, payload: false })\r\n    }\r\n  }\r\n}\r\n\r\nexport function _categoryDrop() {\r\n  return { type: EDIT_PRODUCT__CATEGORY_DROP }\r\n}\r\n\r\nexport function _loadCategory() {\r\n  return async dispatch => {\r\n    const response = await API.fetch(GET_CATEGORY);\r\n    if (response) dispatch({ type: EDIT_PRODUCT__LOAD_CATEGORY, payload: response })\r\n  }\r\n\r\n}\r\nexport function _flagCategory(status) {\r\n  return { type: EDIT_PRODUCT__FLAG_CATEGORY, payload: status }\r\n}\r\n\r\nexport function _editProduct(key, value) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: EDIT_PRODUCT__EDIT,\r\n      payload: {\r\n        key,\r\n        value\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function _loadProduct(obj) {\r\n  return dispatch => {\r\n    dispatch({ type: EDIT_PRODUCT__LOAD_PRODUCT, payload: obj })\r\n  }\r\n}\r\n\r\n","D:\\lesson\\servRasp\\client\\src\\reducers\\r__adminPage.js",[],"D:\\lesson\\servRasp\\client\\src\\actions\\adminPage\\action_adminPage.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Titles\\FormTitle.js",[],["299","300"],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Titles\\titleWithButton.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Titles\\h2_title.js",[],"D:\\lesson\\servRasp\\client\\src\\config.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\inputUniversal.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\checkbox.js",["301","302"],"import React, { useCallback, useState } from 'react';\r\nimport './checkbox.css';\r\n\r\nexport default function Checkbox({ action, check, style }) {\r\n\r\n  return (\r\n    <label className={`checkbox ${style}`}>\r\n      <input type='checkbox' checked={check} onChange={(e) => action(e.target.checked)} />\r\n      <span></span>\r\n    </label>\r\n\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Buttons\\bigButton.js",[],"D:\\lesson\\servRasp\\client\\src\\pages\\adminPages\\listProducts.js",["303","304"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport List from '../../Components/Desktop/Forms/adminForm/form_listProducts/listProducts';\r\nimport AddProduct from '../../Components/Desktop/Forms/adminForm/form_listProducts/addProduct/addProduct'\r\nimport { _getListProducts, _warningDelete, _delProduct } from '../../actions/listProduct_action';\r\nimport { _productCreate } from '../../actions/product/action_addProduct';\r\nimport './listProducts.css';\r\nimport TitleComposite from '../../Components/Desktop/Titles/titleComposite';\r\nimport Button from '../../Components/Desktop/Buttons/button';\r\nimport { ActionButton } from '../../Components/Desktop/Buttons/actionButton';\r\n\r\n\r\nexport default function ListProducts() {\r\n\r\n  const dispatch = useDispatch();\r\n  const { listProducts, modalAlert, idDelProduct } = useSelector(state => state.listProductsStore);\r\n  const { productCreate } = useSelector(state => state.productStore)\r\n  const { id } = useSelector(state => state.userStore);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(_getListProducts())\r\n  }, [dispatch])\r\n\r\n  function delProduct() {\r\n    dispatch(_delProduct(idDelProduct, id))\r\n    dispatch(_warningDelete(false, null))\r\n    dispatch(_getListProducts())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TitleComposite title='List products'>\r\n        <ActionButton\r\n          action={() => dispatch(_productCreate(true))}\r\n          icon='icon_addProduct.svg'\r\n          name='Add product'\r\n          style={productCreate ? 'disable' : 'sea'}\r\n        />\r\n      </TitleComposite>\r\n      <div>\r\n        {productCreate\r\n          ? <AddProduct />\r\n          : ''\r\n        }\r\n        <List data={listProducts} />\r\n      </div>\r\n      {modalAlert\r\n        ? <div className='modalAlert'>\r\n          <div className='modalAlert__confirm'>\r\n            <h3>Are you sure you want to delete?</h3>\r\n            <div className='button-row'>\r\n              <Button\r\n                text='Confirm'\r\n                style='sea'\r\n                action={delProduct}\r\n              />\r\n              <Button\r\n                text='Cancel'\r\n                style='gray'\r\n                action={() => dispatch(_warningDelete(false, null))}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : ''\r\n      }\r\n\r\n    </>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\listProducts.js",[],"D:\\lesson\\servRasp\\client\\src\\actions\\listProduct_action.js",["305"],"\r\nimport {\r\n  LIST_PRODUCTS__GET_LIST,\r\n  LIST_PRODUCTS__RENDER_MODAL_ALERT,\r\n  LIST_PRODUCTS__DEL_PRODUCT,\r\n  LIST_PRODUCTS__CHANGE_ACTIVITY,\r\n  // \r\n  LIST_PRODUCTS__SET_NAME_FILTER,\r\n  LIST_PRODUCTS__FIND_PRODUCT\r\n  // \r\n} from '../reducers/Types';\r\nimport API from '../api/api'\r\nimport { LIST_PRODUCT, DEL_PRODUCT, UPDATE_PRODUCT } from '../api/endpoint'\r\n\r\nexport function _findProduct(name) {\r\n  return { type: LIST_PRODUCTS__FIND_PRODUCT, payload: name.toLowerCase() }\r\n}\r\n\r\nexport function _setNameFilter(name) {\r\n  return { type: LIST_PRODUCTS__SET_NAME_FILTER, payload: name.toLowerCase() }\r\n}\r\n\r\nexport function _getListProducts() {\r\n  return async dispatch => {\r\n    const response = await API.fetch(LIST_PRODUCT);\r\n    if (response) dispatch({ type: LIST_PRODUCTS__GET_LIST, payload: response.data })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function _warningDelete(status, id) {\r\n  return {\r\n    type: LIST_PRODUCTS__RENDER_MODAL_ALERT,\r\n    payload: {\r\n      id, status\r\n    }\r\n  }\r\n}\r\n\r\nexport function _delProduct(id, user) {\r\n  return async dispatch => {\r\n    const data = { id, user }\r\n    const response = await API.fetch(DEL_PRODUCT, data);\r\n    if (response.status) dispatch({ type: LIST_PRODUCTS__DEL_PRODUCT })\r\n  }\r\n}\r\n\r\nexport function _changeActivity(data) {\r\n  return async dispatch => {\r\n    dispatch({ type: LIST_PRODUCTS__CHANGE_ACTIVITY, payload: { id: data._id } })\r\n    const response = await API.fetch(UPDATE_PRODUCT, data);\r\n  }\r\n}\r\n\r\n","D:\\lesson\\servRasp\\client\\src\\reducers\\listProduct_reducer.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\listProducts_ItemProduct.js",["306"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nimport './listProductsItemProduct.css';\r\nimport Checkbox from '../../../Inputs/checkbox';\r\nimport EditProduct from './editProduct/editProduct';\r\nimport { _warningDelete, _changeActivity } from '../../../../../actions/listProduct_action';\r\nimport { _loadProduct } from '../../../../../actions/product/action_addProduct'\r\n\r\nexport default function ListProductsItemProduct({ data }) {\r\n  const { date, _id, activity } = data\r\n\r\n  const dispatch = useDispatch()\r\n  const [focusProduct, setFocusProduct] = useState(false);\r\n  const [flagEditProduct, setFlagEditProduct] = useState(false)\r\n\r\n  const itemProductRef = useRef();\r\n\r\n  function edit() {\r\n    setFlagEditProduct(true)\r\n    dispatch(_loadProduct(data))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    function onBlur(e) {\r\n      if (itemProductRef.current !== null && !itemProductRef.current.contains(e.target)) {\r\n        setFocusProduct(false);\r\n      }\r\n    }\r\n    document.body.addEventListener('click', onBlur)\r\n    return () => {\r\n      document.body.removeEventListener('click', onBlur);\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className={`listProducts__itemProduct ${focusProduct ? 'active' : ''}`}\r\n      onClick={() => setFocusProduct(true)}\r\n      ref={itemProductRef}\r\n    >\r\n      {\r\n        !flagEditProduct ?\r\n          <div className={`itemProduct__wrapper ${!data.activity ? 'disabled' : ''}`}>\r\n            <div className='itemProduct__activity'>\r\n              <Checkbox\r\n                style='checkbox-sea'\r\n                action={() => dispatch(_changeActivity(data))}\r\n                check={activity}\r\n              />\r\n            </div>\r\n            <div className=\"itemProduct__preview\">\r\n              <img src={`/upload/${data.preview}`} alt={data.name} />\r\n            </div>\r\n            <div className=\"itemProduct__name\">\r\n              <p>{data.name}</p>\r\n            </div>\r\n            <div className=\"itemProduct__brand\"><p>{data.brand}</p></div>\r\n            <div className=\"itemProduct__category\">{data.category.map(item => <p key={item._id}>{item.name}</p>)}</div>\r\n            <div className=\"itemProduct__prise\"><p>{`€`} {data.price}</p></div>\r\n            <div className=\"itemProduct__date\">\r\n              <span>{`${date.slice(0, 10)}`}</span>\r\n              <span>{`${date.slice(11, 16)}`}</span>\r\n            </div>\r\n            {focusProduct\r\n              ? <div className={`itemProduct__focus`}>\r\n                <button type='button' className='focus__editProduct'\r\n                  onClick={edit}\r\n                >\r\n                  <img src=\"img/icon_edit.svg\" alt='icon_edit' />\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button className='focus__delProduct'\r\n                  onClick={() => dispatch(_warningDelete(true, _id))}>\r\n                  <img src='img/icon_trash.svg' alt='icon_trash' />\r\n                  <span>Delete</span>\r\n                </button>\r\n              </div>\r\n              : ''\r\n            }\r\n          </div>\r\n          : <EditProduct\r\n            close={(status) => setFlagEditProduct(status)}\r\n          />\r\n      }\r\n    </div>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\editProduct\\editProduct.js",["307","308","309","310","311"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Button from '../../../../Buttons/button';\r\nimport './editProduct.css'\r\nimport ComponentProduct from './product';\r\nimport { _cancelEdit, _updateProduct } from '../../../../../../actions/product/action_addProduct'\r\nimport { _getListProducts } from '../../../../../../actions/listProduct_action';\r\n\r\n\r\nexport default function EditProduct({ close }) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { product, uploadImg, arrDelImage } = useSelector(state => state.productStore)\r\n\r\n  const refForm = useRef()\r\n\r\n  // индикация заполнения полей\r\n  const [feedback, setFeedback] = useState({});\r\n\r\n  // при запуске компонента формирую объект состояния валидации форм и заполняю его неактивным статусом\r\n  const initCheck = useCallback(() => {\r\n    const arrKey = Object.keys(product);\r\n    arrKey.forEach(item => { setFeedback({ ...feedback }, feedback[item] = true) })\r\n  }, [])\r\n\r\n\r\n  function onBlur(e) {\r\n    if (refForm.current !== null && !refForm.current.contains(e.target)) {\r\n      closeEdit()\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    initCheck()\r\n    // document.body.addEventListener('click', onBlur)\r\n    return () => {\r\n      // при закрытии компонента обновляю список продуктов\r\n      // document.body.removeEventListener('click', onBlur);\r\n      dispatch(_getListProducts())\r\n    }\r\n  }, [])\r\n\r\n\r\n  function checkInputs(state, funFeedback) {\r\n    // проверяю, заполнены ли поля в существующих инпутах\r\n    // если они не активны (null) то в объекте состояния не активирую  \r\n    for (let item in feedback) {\r\n      if (state[item] || state[item] === null) {\r\n        funFeedback({ ...feedback }, feedback[item] = true)\r\n      }\r\n      else funFeedback({ ...feedback }, feedback[item] = false)\r\n    }\r\n\r\n  }\r\n\r\n  function checkForm(obj) {\r\n    let rezult = null;\r\n    for (let key in obj) {\r\n      if (obj[key]) {\r\n        rezult = true\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n    }\r\n    return rezult\r\n  }\r\n\r\n  function closeEdit() {\r\n    dispatch(_cancelEdit(uploadImg))\r\n    close(false)\r\n  }\r\n\r\n  return (\r\n    <form ref={refForm}>\r\n      <div>\r\n        <ComponentProduct data={product} feedback={feedback} />\r\n      </div>\r\n      <div className=\"button-row\">\r\n        <Button\r\n          text='Change'\r\n          style='sea'\r\n          action={() => {\r\n            checkInputs(product, setFeedback)\r\n            if (checkForm(feedback)) {\r\n              dispatch(_updateProduct(product))\r\n              dispatch(_cancelEdit(arrDelImage))\r\n              close(false)\r\n            }\r\n            else console.log('--------------------');\r\n          }\r\n          }\r\n          type='button'\r\n        />\r\n        <Button\r\n          text='Cancel'\r\n          style='gray'\r\n          action={closeEdit}\r\n          type='button'\r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\editProduct\\product.js",["312","313","314","315","316","317","318","319"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { config } from '../../../../../../config'\r\nimport TextArea from '../../../../Inputs/textArea'\r\nimport FormLayout from '../../form_layout';\r\nimport InputPreview from '../../../../Inputs/inputPreview';\r\nimport InputUniversal from '../../../../Inputs/inputUniversal';\r\nimport GaleryPreviews from './galeryPreviews';\r\nimport MultiInputs from '../../../../Inputs/multiInput';\r\nimport Promo from './promo';\r\nimport Categorys from './categorys';\r\nimport { _editProduct, _addNewImgGaleryPreviews, _addPreviewImg } from '../../../../../../actions/product/action_addProduct';\r\nimport './product.css';\r\n\r\nexport default function ItemProduct({ data, feedback }) {\r\n\r\n  const { template, product } = useSelector(state => state.productStore)\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div className='product'>\r\n      <div className='product-col-lg-6'>\r\n        <FormLayout title='Name product'\r\n          condition={true}\r\n          alertFlag={feedback.name}\r\n          alertText='The field is not filled'\r\n        >\r\n          <TextArea\r\n            style='textArea-name'\r\n            value={data.name}\r\n            action={(value) => dispatch(_editProduct('name', value))}\r\n            template={template.name}\r\n          />\r\n        </FormLayout>\r\n        {/* ----------------------------------------------------------------- */}\r\n        <FormLayout title='Short description'\r\n          condition={true}\r\n          alertFlag={feedback.shortDescription}\r\n          alertText='The field is not filled'\r\n        >\r\n          <TextArea\r\n            style='textArea-shortDescription'\r\n            value={data.shortDescription}\r\n            action={(value) => dispatch(_editProduct('shortDescription', value))}\r\n            template={template.shortDescription}\r\n          />\r\n        </FormLayout>\r\n        {/* -------------------------------------------------------------------------------- */}\r\n        <FormLayout title='Price'\r\n          condition={true}\r\n          alertFlag={feedback.price}\r\n          style='FormLayout__Price'\r\n          alertText='The field is not filled'\r\n        >\r\n          <div className='product_price'>\r\n            <h5>{config._CURRENCY_SIGN}</h5>\r\n            <InputUniversal\r\n              value={data.price}\r\n              action={(number) => dispatch(_editProduct('price', number))}\r\n              template={template.price}\r\n            />\r\n          </div>\r\n        </FormLayout>\r\n        {/* --------------------------------------------------------------------------------------- */}\r\n        <FormLayout title='Category'\r\n          condition={true}\r\n          alertFlag={feedback.category}\r\n          style='FormLayout_Category'\r\n          alertText='The field is not filled'\r\n        >\r\n          <Categorys\r\n            data={data.category}\r\n          />\r\n        </FormLayout>\r\n        {/* -------------------------------------------------------------------------------------------------------------- */}\r\n      </div>\r\n      <div className='product-col-lg-6'>\r\n        <FormLayout title='Brand'\r\n          condition={true}\r\n          alertFlag={feedback.brand}\r\n          alertText='The field is not filled'\r\n        >\r\n          <TextArea\r\n            style='textArea-brend'\r\n            value={data.brand}\r\n            action={(value) => dispatch(_editProduct('brand', value))}\r\n            template={template.brand}\r\n          />\r\n        </FormLayout>\r\n        {/* ---------------------------------------------------------------------------------------------- */}\r\n        <FormLayout title='Title preview'\r\n          condition={true}\r\n          alertFlag={feedback.preview}\r\n          alertText='The field is not filled'\r\n        >\r\n          <InputPreview\r\n            value={data.preview}\r\n            style='product-preview'\r\n            action={(obj) => dispatch(_addPreviewImg(obj))}\r\n          />\r\n        </FormLayout>\r\n        {/* ---------------------------------------------------------------------------------------------- */}\r\n        <FormLayout title='Gallery previews' alertFlag={true}>\r\n          <GaleryPreviews\r\n            data={data.previews}\r\n            action={(img) => dispatch(_addNewImgGaleryPreviews(img))}\r\n          />\r\n        </FormLayout>\r\n        {/* ---------------------------------------------------------------------------------------------- */}\r\n      </div>\r\n      <FormLayout title='Description'\r\n        condition={true}\r\n        alertFlag={feedback.description}\r\n        alertText='The field is not filled'\r\n      >\r\n        <TextArea\r\n          style='textArea-description'\r\n          value={data.description}\r\n          action={(value) => dispatch(_editProduct('description', value))}\r\n          template={template.description}\r\n        />\r\n      </FormLayout>\r\n      {/* -------------------------------------------------------------------------------------------------------------- */}\r\n      <FormLayout title='Details' alertFlag={true}>\r\n        <MultiInputs\r\n          value={data.details}\r\n        />\r\n      </FormLayout>\r\n      {/* ---------------------------------------------------------------------- +1 */}\r\n      <FormLayout title='Promotions' alertFlag={true}>\r\n        <Promo\r\n          value={data.promotion}\r\n        />\r\n      </FormLayout>\r\n      {/* ----------------------------------------------------------------------- */}\r\n    </div>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\textArea.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_layout.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\multiInput.js",["320","321","322"],"import React, { useState } from 'react';\r\nimport uniqid from 'uniqid'\r\n\r\nimport './multiInput.css'\r\nimport InputUniversal from '../Inputs/inputUniversal'\r\nimport SmallButton from '../Buttons/smallButton'\r\nimport { _addDetail, _addNewDetail, _editDetail, _deleteDetail } from '../../../actions/product/action_addProduct'\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nexport default function MultiInputs({ value }) {\r\n  value = value ?? []\r\n  const dispath = useDispatch()\r\n  const [valueInput, setValueInput] = useState({ name: '', description: '' })\r\n\r\n  const userDetals = value.map((item, index) => {\r\n    return <div className='MultiInputs_row' key={index}>\r\n      <InputUniversal\r\n        value={item.name}\r\n        action={(name) => dispath(_editDetail(index, { ...item, name }))}\r\n\r\n      />\r\n      <InputUniversal\r\n        value={item.description}\r\n        action={(description) => dispath(_editDetail(index, { ...item, description }))}\r\n\r\n      />\r\n      <SmallButton\r\n        iconType='reset'\r\n        style='selector-button white'\r\n        action={() => dispath(_deleteDetail(index))}\r\n      />\r\n    </div>\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div className='MultiInputs__userData'>{userDetals}</div>\r\n      <div className='MultiInputs_row'>\r\n        <InputUniversal\r\n          value={valueInput.name}\r\n          placeholder='Add name:'\r\n          action={(name) => {\r\n            setValueInput((valueInput) => {\r\n              return { ...valueInput, name }\r\n            })\r\n            dispath(_addNewDetail(valueInput))\r\n          }\r\n          }\r\n        />\r\n        <InputUniversal\r\n          value={valueInput.description}\r\n          placeholder='Add value:'\r\n          action={(description) => {\r\n            setValueInput((valueInput) => {\r\n              return { ...valueInput, description }\r\n            })\r\n            dispath(_addNewDetail(valueInput))\r\n          }\r\n          }\r\n        />\r\n        <div className='cap'></div>\r\n      </div>\r\n\r\n      <SmallButton\r\n        iconType='add'\r\n        style='sea add-detail'\r\n        action={() => {\r\n          dispath(_addDetail())\r\n          setValueInput({ name: '', description: '' })\r\n        }}\r\n      />\r\n    </div>\r\n\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\editProduct\\promo.js",["323","324","325","326","327"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport './promo.css';\r\nimport Checkbox from '../../../../Inputs/checkbox'\r\nimport InputUniversal from '../../../../Inputs/inputUniversal'\r\nimport { _promo_addNewDiscount, _promo_SetDiscount, _selectPromo, _delItemPromo } from '../../../../../../actions/product/action_addProduct'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SelectList from '../../../../Lists/selectList'\r\n\r\nexport default function Promo({ value }) {\r\n\r\n  const [checkboxDiscount, setCheckboxDiscount] = useState(value.discount ?? false);\r\n  const [checkboxPromo, setCheckboxPromo] = useState(value.promo && value.promo.length ? true : false);\r\n  const { listPromo } = useSelector(state => state.productStore)\r\n  const { promo } = value;\r\n  const [userSelectPromo, setUserSelectPromo] = useState([])\r\n\r\n\r\n  function initUserPromo(listPromo, userPromo) {\r\n    const select = [];\r\n    listPromo.forEach((item) => {\r\n      for (let i = 0; i < userPromo.length; i++) {\r\n        if (item._id === userPromo[i]) select.push(item.name)\r\n      }\r\n    })\r\n\r\n    return select\r\n  }\r\n  useEffect(() => {\r\n    if (promo && listPromo)\r\n      setUserSelectPromo(initUserPromo(listPromo, promo))\r\n  }, [listPromo])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(_promo_addNewDiscount('discount', checkboxDiscount))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch(_promo_addNewDiscount('promo', checkboxPromo))\r\n  }, [])\r\n\r\n  return (\r\n    <div className='Promo'>\r\n      <label className='Promo_label'>\r\n        <Checkbox\r\n          check={checkboxDiscount}\r\n          action={setCheckboxDiscount}\r\n          style='checkbox-sea hidden'\r\n        />\r\n        <h5>Discounts:</h5>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <InputUniversal\r\n            value={value.discount = value.discount ?? ''}\r\n            action={(number) => {\r\n              if (number) {\r\n                setCheckboxDiscount(true)\r\n                dispatch(_promo_SetDiscount(number))\r\n              }\r\n              else setCheckboxDiscount(false)\r\n\r\n            }}\r\n          />\r\n          <div className='icon-element'>\r\n            <svg width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\">\r\n              <path d=\"M5 14L15 4\" strokeLinecap=\"round\" />\r\n              <circle cx=\"4.5\" cy=\"4.5\" r=\"3.5\" />\r\n              <circle cx=\"14.5\" cy=\"14.5\" r=\"3.5\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </label>\r\n\r\n      <label className='Promo_label'>\r\n        <Checkbox\r\n          check={checkboxPromo}\r\n          action={setCheckboxPromo}\r\n          style='checkbox-sea hidden'\r\n        />\r\n        <div className='Promo_label__userSelect'>\r\n          <p>Selected:</p>\r\n          {userSelectPromo.map((item, index) => {\r\n            return (\r\n              <p className='userSelect__item'\r\n                key={index}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setUserSelectPromo((userSelectPromo) => {\r\n                    return userSelectPromo.filter(elem => elem !== item);\r\n                  })\r\n                  dispatch(_delItemPromo(item))\r\n                  if (!index > 0)\r\n                    setCheckboxPromo(false)\r\n\r\n                }}\r\n              >\r\n                {item}\r\n              </p>\r\n            )\r\n          })}\r\n        </div>\r\n        <SelectList\r\n          userData={userSelectPromo}\r\n          title='Add choice:'\r\n          list={listPromo}\r\n          action={(id) => dispatch(_selectPromo(id))}\r\n          externalSignal={(signal, name) => {\r\n            setCheckboxPromo(signal)\r\n            let arr = userSelectPromo;\r\n            arr.push(name)\r\n            arr = Array.from(new Set(arr))\r\n            setUserSelectPromo(arr)\r\n          }}\r\n        />\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Lists\\selectList.js",["328","329","330"],"import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport SmallButton from '../Buttons/smallButton';\r\nimport './selectList.css'\r\n\r\nexport default function SelectList({ title, userData, list, action, externalSignal }) {\r\n\r\n  const [selectTitle, setSelectTitle] = useState(title)\r\n  const [flagDrop, setFlagDrop] = useState(false);\r\n\r\n\r\n  const firstUserPromo = useCallback((array, data) => {\r\n    let find = null;\r\n    array.forEach(item => {\r\n      if (typeof (data) === 'object') {\r\n        if (item._id === data[0]) {\r\n          find = item.name;\r\n        }\r\n      }\r\n      else {\r\n        if (item._id === data) find = item.name;\r\n      }\r\n    })\r\n    return find\r\n  })\r\n\r\n  useEffect(() => {\r\n    const first = firstUserPromo(list, userData)\r\n    if (first)\r\n      setSelectTitle(first)\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    // для того, чтобы клик по объекту не вызывал отмену чекбокса вешаю на него e.preventDefault()\r\n    <div className='product_category__select' onClick={(e) => e.preventDefault()}>\r\n      <div className='title' onClick={() => {\r\n        setFlagDrop((flagDrop) => { return !flagDrop })\r\n      }}>\r\n        <h5 className='placeholder'\r\n          style={(userData && typeof (userData) === 'string') || (userData.length) ? { color: 'var(--black)' } : { color: 'var(--gray)' }}\r\n        >\r\n          {!userData.length > 0 ? title : userData[userData.length - 1]}\r\n        </h5>\r\n      </div>\r\n      <SmallButton\r\n        iconType='list'\r\n        style={`sea list-button ${flagDrop ? 'active' : ''}`}\r\n        action={() => setFlagDrop((flagDrop) => { return !flagDrop })}\r\n      />\r\n      {flagDrop ?\r\n        <ul className='select__drop'>\r\n          {list.map(item =>\r\n            <li key={item._id}\r\n              onClick={() => {\r\n                action(item._id)\r\n                setSelectTitle(item.name)\r\n                setFlagDrop(false)\r\n                externalSignal(true, item.name)\r\n              }}\r\n            >\r\n              <span\r\n              >{item.name}</span>\r\n            </li>)}\r\n        </ul>\r\n        : ''\r\n      }\r\n    </div >\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\api\\api.js",["331"],"import ENDPOINTS from './endpoint';\r\nconst API_URL = 'api';\r\n\r\n\r\nclass Api {\r\n  constructor(url, endpoint) {\r\n    this.url = url;\r\n    this.endpoint = endpoint;\r\n  }\r\n\r\n  async generateRequest(controller, endpoint, data) {\r\n    const { method, uri } = this.endpoint[endpoint];\r\n    console.log();\r\n    if (method === 'GET') {\r\n      return fetch(`${API_URL}${uri}`, {\r\n        method,\r\n        signal: controller.signal,\r\n        body: data\r\n      })\r\n    }\r\n    else if (uri === '/uploadPreview') {\r\n      const formData = new FormData();\r\n      formData.append('previewUrl', data, data.name);\r\n      return fetch(`${API_URL}${uri}`, {\r\n        method,\r\n        signal: controller.signal,\r\n        body: formData\r\n      })\r\n    }\r\n    else {\r\n      return fetch(`${API_URL}${uri}`, {\r\n        method,\r\n        signal: controller.signal,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ data })\r\n      })\r\n    }\r\n\r\n  }\r\n  async fetch(endpoint, data) {\r\n    const ac = new AbortController;\r\n    const response = await this.generateRequest(ac, endpoint, data);\r\n    try {\r\n      return await response.json();\r\n    }\r\n    catch (e) {\r\n      ac.abort()\r\n      console.log(e);\r\n    }\r\n\r\n  }\r\n}\r\nexport default new Api(API_URL, ENDPOINTS)","D:\\lesson\\servRasp\\client\\src\\api\\endpoint.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\editProduct\\galeryPreviews.js",["332","333"],"import React from 'react';\r\n\r\nimport InputGallery from '../../../../Inputs/inputGallery';\r\nimport './galeryPreviews.css';\r\nimport { _deleteImgInGalery } from '../../../../../../actions/product/action_addProduct';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function GaleryPreviews({ data, action }) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if (!data) data = []\r\n  const list = data.map((item, index) => {\r\n    return <InputGallery\r\n      key={index}\r\n      style='galery-previews_item'\r\n      value={item}\r\n      galeryMode='true'\r\n      action={(img) => dispatch(_deleteImgInGalery(img))}\r\n    />\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <div className='galery-previews'>\r\n      <p>Image load: {data.length}</p>\r\n      <div className='galery-previews__wrapper'>\r\n        <InputGallery\r\n          value={false}\r\n          style='galery-previews_item'\r\n          action={(img) => action(img)}\r\n        />\r\n        <div className='preview-scroll'>\r\n          <div className='preview-scroll_list'>{list}</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\inputGallery.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Inputs\\inputPreview.js",["334"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './inputPreview.css'\r\n\r\nexport default function InputPreview({ style, value, action }) {\r\n\r\n  const { preloader } = useSelector(state => state.productStore)\r\n\r\n\r\n  return (\r\n    <div className={`preview ${style}`}>\r\n      <label>\r\n        <input type='file' onChange={(e) => action({ oldImg: value, newImg: e.target.files[0] })} />\r\n        {preloader\r\n          ? <div>Preloader</div>\r\n          : <>\r\n            {value\r\n              ? <img className='preview__previewImg' src={`upload/${value}`} />\r\n              : <img src=\"/img/previewImg.svg\" alt=\"icon-preview\" />\r\n            }\r\n          </>\r\n        }\r\n\r\n      </label>\r\n    </div>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\editProduct\\categorys.js",["335","336","337","338"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport SmallButton from '../../../../Buttons/smallButton';\r\nimport InputUniversal from '../../../../Inputs/inputUniversal';\r\nimport { _flagCategory, _categoryDrop, _editProduct, _addCategory, _addNameNewCategory, _loadCategory, _loadListPromo } from '../../../../../../actions/product/action_addProduct'\r\n\r\nexport default function Categorys({ data }) {\r\n  const { listCategory, flagCategory, categoryDrop, nameNewCategory } = useSelector(state => state.productStore);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(_loadCategory())\r\n    dispatch(_loadListPromo())\r\n  }, [])\r\n\r\n  return (\r\n    <div className='product_category'>\r\n      {!flagCategory\r\n        ? <div className='product_category__select' style={{ width: \"calc(100% + 16px)\", marginLeft: \"-15px\", border: \"none\" }}>\r\n          <SmallButton\r\n            iconType='add'\r\n            style='selector-button white'\r\n            action={() => dispatch(_flagCategory(true))} />\r\n          <SmallButton\r\n            iconType='list'\r\n            style={`sea list-button ${categoryDrop ? 'active' : ''}`}\r\n            action={() => dispatch(_categoryDrop())}\r\n          />\r\n          <div className='title'>\r\n            <h5>{!nameNewCategory ? data[0].name : nameNewCategory}{!data[0].name ? 'Select category:' : ''}</h5>\r\n          </div>\r\n          {categoryDrop ?\r\n            <ul className='select__drop' style={{ width: \"calc(100% + 16px)\" }}>\r\n              {listCategory.map(item => {\r\n                return <li key={item._id}\r\n                  onClick={() => {\r\n                    dispatch(_editProduct('category', [{ _id: item._id, name: item.name }]))\r\n                    dispatch(_categoryDrop())\r\n                  }}\r\n                >\r\n                  <span\r\n                  >{item.name}</span>\r\n                </li>\r\n              })}\r\n            </ul>\r\n            : ''\r\n          }\r\n        </div>\r\n        : <div className='product_category__input'>\r\n          <SmallButton\r\n            action={() => dispatch(_flagCategory(false))}\r\n            iconType='reset'\r\n            style='selector-button white'\r\n          />\r\n          <SmallButton\r\n            style='sea input'\r\n            name='OK'\r\n            action={() =>\r\n              dispatch(_addCategory(nameNewCategory))\r\n            }\r\n          />\r\n          <InputUniversal placeholder='Add new category' action={(name) => dispatch(_addNameNewCategory(name))} />\r\n        </div>}\r\n    </div>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Titles\\titleComposite.js",[],"D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\addProduct\\addProduct.js",["339","340","341","342"],"import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { _productCreate } from '../../../../../../actions/product/action_addProduct';\r\n\r\nimport Button from '../../../../Buttons/button'\r\nimport Product from '../editProduct/product'\r\nimport './addProduct.css';\r\nimport { _cancelEdit, _confirmCreateProduct } from '../../../../../../actions/product/action_addProduct';\r\nimport { _getListProducts } from '../../../../../../actions/listProduct_action'\r\n\r\nexport default function AddProduct() {\r\n  const dispatch = useDispatch()\r\n  const [feedback, setFeedback] = useState({});\r\n  const { product, uploadImg, arrDelImage } = useSelector(state => state.productStore)\r\n  const { id } = useSelector(state => state.userStore)\r\n\r\n  const initCheck = useCallback(() => {\r\n    const arrKey = Object.keys(product);\r\n    arrKey.forEach(item => { setFeedback({ ...feedback }, feedback[item] = true) })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    initCheck();\r\n    return () => {\r\n      // при закрытии компонента обновляю список продуктов\r\n      dispatch(_getListProducts())\r\n    }\r\n  }, [])\r\n\r\n  function checkInputs(product, funFeedback) {\r\n    // проверяю, заполнены ли поля в существующих инпутах\r\n    // если они не активны (null) то в объекте состояния не активирую  \r\n    for (let item in feedback) {\r\n      if (product[item]) {\r\n        if (item === 'category' && product[item][0].name) {\r\n\r\n        }\r\n        funFeedback({ ...feedback }, feedback[item] = true)\r\n      }\r\n      else funFeedback({ ...feedback }, feedback[item] = false)\r\n    }\r\n\r\n  }\r\n  function checkForm(obj) {\r\n    let rezult = null;\r\n    for (let key in obj) {\r\n      if (obj[key] && obj[key] !== '') {\r\n        rezult = true\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n    }\r\n    return rezult\r\n  }\r\n\r\n  function createProduct() {\r\n    checkInputs(product, setFeedback);\r\n    if (checkForm(feedback)) {\r\n      // добавляю автора в модель продукта\r\n      product.autor = id\r\n      dispatch(_confirmCreateProduct(product))\r\n      dispatch(_cancelEdit(arrDelImage))\r\n      dispatch(_productCreate(false))\r\n    }\r\n\r\n  }\r\n\r\n  function cancel() {\r\n    dispatch(_cancelEdit(uploadImg))\r\n    dispatch(_productCreate(false))\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='addProduct'>\r\n      <h5 className='fill-description'><b>*</b> Required to fill</h5>\r\n      <Product data={product} feedback={feedback} />\r\n      <div className='button-row'>\r\n        <Button\r\n          text='Create'\r\n          style='sea'\r\n          action={createProduct} />\r\n        <Button\r\n          text='Cancel'\r\n          style='gray'\r\n          action={cancel} />\r\n      </div>\r\n    </div>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\filtersListProduct.js",["343"],"import React, { useState } from 'react'\r\n\r\nimport './filtersListProducts.css';\r\nimport { _setNameFilter } from '../../../../../actions/listProduct_action'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nexport default function FiltersListProducts() {\r\n  const filters = ['Activity', 'Preview', 'Name', 'Brand', 'Category', 'Price', \"Date\"]\r\n  const [active, setActive] = useState(null)\r\n  const dispatch = useDispatch()\r\n\r\n  const { nameFilter } = useSelector(state => state.listProductsStore)\r\n\r\n  function activeFilter(name, index) {\r\n    setActive(index);\r\n    dispatch(_setNameFilter(name))\r\n  }\r\n\r\n  return (\r\n    <ul className='filtersListProducts'>\r\n      {filters.map((item, index) =>\r\n        <li key={index} className={`filter ${item} ${active === index ? 'active' : ''}`} onClick={() => activeFilter(item, index)}>\r\n          <span>{item}</span>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\Components\\Desktop\\Forms\\adminForm\\form_listProducts\\findProduct.js",["344","345"],"import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport InputUniversal from '../../../Inputs/inputUniversal';\r\nimport './findProduct.css';\r\nimport { _findProduct } from '../../../../../actions/listProduct_action';\r\nimport SmallButton from '../../../Buttons/smallButton'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function FindProduct() {\r\n\r\n  const dispatch = useDispatch()\r\n  const [active, setActive] = useState(false);\r\n  const [value, setValue] = useState('')\r\n  const findRef = useRef(null)\r\n\r\n  const externalClick = useMemo(() => (e) => {\r\n    if (findRef.current !== null && !findRef.current.contains(e.target)) {\r\n      setActive(false)\r\n    }\r\n  }, [findRef])\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', (e) => externalClick(e))\r\n    return () => document.removeEventListener('click', (e) => externalClick(e))\r\n  }, [])\r\n\r\n  return (\r\n    <div className={`FindProduct ${active ? 'active' : ''}`} onClick={() => setActive(true)} ref={findRef}>\r\n      {!active && !value\r\n        ? <div className='FindProduct__preview'>\r\n          <svg width=\"20\" height=\"19\" viewBox=\"0 0 20 19\" fill=\"none\">\r\n            <circle cx=\"7.97266\" cy=\"8.00964\" r=\"6.72266\" />\r\n            <path d=\"M13.2041 13.0584L18.1097 17.963\" />\r\n          </svg>\r\n          <span>Find product</span>\r\n        </div>\r\n        : ''\r\n      }\r\n      <InputUniversal\r\n        value={value}\r\n        action={(value) => {\r\n          setValue(value)\r\n          dispatch(_findProduct(value))\r\n        }\r\n        } />\r\n      <SmallButton\r\n        iconType='reset'\r\n        style='white'\r\n        action={() => {\r\n          dispatch(_findProduct(''))\r\n          setValue('')\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","D:\\lesson\\servRasp\\client\\src\\pages\\adminPages\\catalog.js",["346","347","348"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { _createCatalogItem, _getListCatalogItem } from '../../actions/catalog/catalog_action';\r\nimport CatalogList from './catalog/catalogList/catalogList';\r\nimport H2Title from '../../Components/Desktop/Titles/h2_title'\r\n\r\nexport default function Catalog() {\r\n\r\n  const { name, rootCatalog } = useSelector(state => state.catalogStore)\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(_getListCatalogItem())\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <H2Title text='Catalog' />\r\n      <CatalogList\r\n        data={rootCatalog}\r\n      />\r\n    </div>\r\n\r\n  )\r\n}","D:\\lesson\\servRasp\\client\\src\\reducers\\catalog_reducer.js",[],"D:\\lesson\\servRasp\\client\\src\\actions\\catalog\\catalog_action.js",[],"D:\\lesson\\servRasp\\client\\src\\pages\\adminPages\\catalog\\catalogList\\catalogList.js",["349","350"],"D:\\lesson\\servRasp\\client\\src\\pages\\adminPages\\catalog\\catalogList\\catalogItem.js",["351","352"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { _subDir, _createSubDir, _setNameDir, _createCatalogItem, _getSubDir, _eventRemoveAddItem, _selectedItem } from '../../../../actions/catalog/catalog_action';\r\nimport InputUniversal from '../../../../Components/Desktop/Inputs/inputUniversal';\r\nimport SmallButton from '../../../../Components/Desktop/Buttons/smallButton';\r\nimport './catalogItem.css'\r\n\r\nexport default function CatalogItem({ data, padding }) {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector(state => state.catalogStore);\r\n  const catalogStore = useSelector(state => state.catalogStore);\r\n  const [alert, setAlert] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <li>\r\n      <div className={`CatalogItem__title ${data.selected ? 'active' : ''} ${data.active ? 'selected' : ''}`}\r\n        style={{ paddingLeft: `${padding}px` }}\r\n        onClick={() => {\r\n          dispatch(_getSubDir(data._id))\r\n          dispatch(_selectedItem(data._id))\r\n          dispatch(_createSubDir(true))\r\n        }}\r\n      >\r\n        <div className='title-icon'\r\n          onClick={() => {\r\n            !data.addNewItem\r\n              ? dispatch(_subDir({ id: data._id, status: true }))\r\n              : dispatch(_subDir({ id: data._id, status: false }));\r\n          }}\r\n        >\r\n          <svg width=\"16\" height=\"10\" viewBox=\"0 0 16 10\" fill=\"none\" >\r\n            <path d=\"M14.79 1.60529L7.99997 8.39502L1.21023 1.60529\" stroke=\"#31CED8\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\r\n          </svg>\r\n        </div>\r\n        <span>{data.name}</span>\r\n      </div>\r\n      {data.addNewItem\r\n        ? <div className={`CatalogItem_input ${alert ? 'alert' : ''}`} >\r\n          <InputUniversal\r\n            value={name}\r\n            action={(name) => dispatch(_setNameDir(name))}\r\n\r\n          />\r\n          <SmallButton\r\n            iconType='reset'\r\n            style='white'\r\n            action={() => {\r\n              dispatch(_eventRemoveAddItem(data._id, false))\r\n              dispatch(_setNameDir(''))\r\n            }}\r\n          />\r\n          <SmallButton\r\n            iconType='add'\r\n            style='sea'\r\n            action={() => {\r\n              if (name) {\r\n                setAlert(false)\r\n                dispatch(_createCatalogItem({ name, parent: { id: data._id, name: data.name } }))\r\n                dispatch(_eventRemoveAddItem(data._id, false))\r\n              }\r\n              else setAlert(true)\r\n\r\n            }}\r\n          />\r\n        </div>\r\n        : ''\r\n      }\r\n      {data.selected && catalogStore[data._id]\r\n        ? <ul className='sub'>\r\n          {catalogStore[data._id].map(item => <CatalogItem\r\n            key={item._id}\r\n            data={item}\r\n            padding={padding + 10}\r\n          />)}\r\n        </ul>\r\n        : null\r\n      }\r\n    </li>\r\n  )\r\n}",{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":45,"column":6,"nodeType":"359","endLine":45,"endColumn":8,"suggestions":"360"},{"ruleId":"357","severity":1,"message":"361","line":24,"column":6,"nodeType":"359","endLine":24,"endColumn":13,"suggestions":"362"},{"ruleId":"353","replacedBy":"363"},{"ruleId":"355","replacedBy":"364"},{"ruleId":"365","severity":1,"message":"366","line":107,"column":9,"nodeType":"367","endLine":107,"endColumn":20},{"ruleId":"365","severity":1,"message":"366","line":73,"column":9,"nodeType":"367","endLine":73,"endColumn":20},{"ruleId":"368","severity":1,"message":"369","line":9,"column":7,"nodeType":"370","endLine":9,"endColumn":36},{"ruleId":"368","severity":1,"message":"369","line":6,"column":13,"nodeType":"370","endLine":6,"endColumn":39},{"ruleId":"357","severity":1,"message":"371","line":51,"column":6,"nodeType":"359","endLine":51,"endColumn":8,"suggestions":"372"},{"ruleId":"353","replacedBy":"373"},{"ruleId":"355","replacedBy":"374"},{"ruleId":"375","severity":1,"message":"376","line":85,"column":13,"nodeType":"377","messageId":"378","endLine":85,"endColumn":21},{"ruleId":"379","severity":1,"message":"380","line":107,"column":7,"nodeType":"381","messageId":"382","endLine":107,"endColumn":24},{"ruleId":"353","replacedBy":"383"},{"ruleId":"355","replacedBy":"384"},{"ruleId":"375","severity":1,"message":"385","line":1,"column":17,"nodeType":"377","messageId":"378","endLine":1,"endColumn":28},{"ruleId":"375","severity":1,"message":"386","line":1,"column":30,"nodeType":"377","messageId":"378","endLine":1,"endColumn":38},{"ruleId":"365","severity":1,"message":"366","line":55,"column":17,"nodeType":"367","endLine":55,"endColumn":28},{"ruleId":"365","severity":1,"message":"366","line":60,"column":17,"nodeType":"367","endLine":60,"endColumn":29},{"ruleId":"375","severity":1,"message":"376","line":52,"column":11,"nodeType":"377","messageId":"378","endLine":52,"endColumn":19},{"ruleId":"365","severity":1,"message":"366","line":49,"column":17,"nodeType":"367","endLine":49,"endColumn":37},{"ruleId":"357","severity":1,"message":"387","line":26,"column":6,"nodeType":"359","endLine":26,"endColumn":8,"suggestions":"388"},{"ruleId":"375","severity":1,"message":"389","line":29,"column":12,"nodeType":"377","messageId":"378","endLine":29,"endColumn":18},{"ruleId":"357","severity":1,"message":"390","line":44,"column":6,"nodeType":"359","endLine":44,"endColumn":8,"suggestions":"391"},{"ruleId":"365","severity":1,"message":"366","line":85,"column":11,"nodeType":"367","endLine":85,"endColumn":22},{"ruleId":"365","severity":1,"message":"366","line":100,"column":11,"nodeType":"367","endLine":100,"endColumn":23},{"ruleId":"375","severity":1,"message":"392","line":18,"column":21,"nodeType":"377","messageId":"378","endLine":18,"endColumn":28},{"ruleId":"365","severity":1,"message":"366","line":29,"column":13,"nodeType":"367","endLine":29,"endColumn":34},{"ruleId":"365","severity":1,"message":"366","line":42,"column":13,"nodeType":"367","endLine":42,"endColumn":46},{"ruleId":"365","severity":1,"message":"366","line":52,"column":11,"nodeType":"367","endLine":52,"endColumn":36},{"ruleId":"365","severity":1,"message":"366","line":68,"column":11,"nodeType":"367","endLine":68,"endColumn":38},{"ruleId":"365","severity":1,"message":"366","line":84,"column":13,"nodeType":"367","endLine":84,"endColumn":35},{"ruleId":"365","severity":1,"message":"366","line":98,"column":13,"nodeType":"367","endLine":98,"endColumn":36},{"ruleId":"365","severity":1,"message":"366","line":117,"column":11,"nodeType":"367","endLine":117,"endColumn":39},{"ruleId":"375","severity":1,"message":"393","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":14},{"ruleId":"365","severity":1,"message":"366","line":30,"column":9,"nodeType":"367","endLine":30,"endColumn":38},{"ruleId":"365","severity":1,"message":"366","line":67,"column":9,"nodeType":"367","endLine":67,"endColumn":31},{"ruleId":"357","severity":1,"message":"394","line":32,"column":6,"nodeType":"359","endLine":32,"endColumn":17,"suggestions":"395"},{"ruleId":"357","severity":1,"message":"396","line":40,"column":6,"nodeType":"359","endLine":40,"endColumn":8,"suggestions":"397"},{"ruleId":"357","severity":1,"message":"398","line":44,"column":6,"nodeType":"359","endLine":44,"endColumn":8,"suggestions":"399"},{"ruleId":"365","severity":1,"message":"366","line":52,"column":11,"nodeType":"367","endLine":52,"endColumn":38},{"ruleId":"365","severity":1,"message":"366","line":81,"column":11,"nodeType":"367","endLine":81,"endColumn":38},{"ruleId":"375","severity":1,"message":"400","line":8,"column":10,"nodeType":"377","messageId":"378","endLine":8,"endColumn":21},{"ruleId":"357","severity":1,"message":"401","line":12,"column":26,"nodeType":"377","endLine":12,"endColumn":37},{"ruleId":"357","severity":1,"message":"402","line":31,"column":6,"nodeType":"359","endLine":31,"endColumn":8,"suggestions":"403"},{"ruleId":"404","severity":1,"message":"405","line":43,"column":16,"nodeType":"406","messageId":"407","endLine":43,"endColumn":35,"fix":"408"},{"ruleId":"365","severity":1,"message":"366","line":16,"column":7,"nodeType":"367","endLine":16,"endColumn":35},{"ruleId":"365","severity":1,"message":"366","line":31,"column":11,"nodeType":"367","endLine":31,"endColumn":39},{"ruleId":"368","severity":1,"message":"369","line":18,"column":17,"nodeType":"370","endLine":18,"endColumn":80},{"ruleId":"357","severity":1,"message":"409","line":15,"column":6,"nodeType":"359","endLine":15,"endColumn":8,"suggestions":"410"},{"ruleId":"365","severity":1,"message":"366","line":23,"column":13,"nodeType":"367","endLine":23,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":54,"column":13,"nodeType":"367","endLine":54,"endColumn":42},{"ruleId":"365","severity":1,"message":"366","line":57,"column":13,"nodeType":"367","endLine":57,"endColumn":30},{"ruleId":"357","severity":1,"message":"387","line":21,"column":6,"nodeType":"359","endLine":21,"endColumn":8,"suggestions":"411"},{"ruleId":"357","severity":1,"message":"390","line":29,"column":6,"nodeType":"359","endLine":29,"endColumn":8,"suggestions":"412"},{"ruleId":"365","severity":1,"message":"366","line":84,"column":11,"nodeType":"367","endLine":84,"endColumn":22},{"ruleId":"365","severity":1,"message":"366","line":88,"column":11,"nodeType":"367","endLine":88,"endColumn":23},{"ruleId":"375","severity":1,"message":"413","line":13,"column":11,"nodeType":"377","messageId":"378","endLine":13,"endColumn":21},{"ruleId":"357","severity":1,"message":"414","line":24,"column":6,"nodeType":"359","endLine":24,"endColumn":8,"suggestions":"415"},{"ruleId":"365","severity":1,"message":"366","line":47,"column":9,"nodeType":"367","endLine":47,"endColumn":22},{"ruleId":"375","severity":1,"message":"416","line":3,"column":10,"nodeType":"377","messageId":"378","endLine":3,"endColumn":28},{"ruleId":"375","severity":1,"message":"417","line":9,"column":11,"nodeType":"377","messageId":"378","endLine":9,"endColumn":15},{"ruleId":"357","severity":1,"message":"409","line":14,"column":6,"nodeType":"359","endLine":14,"endColumn":8,"suggestions":"418"},{"ruleId":"365","severity":1,"message":"366","line":57,"column":13,"nodeType":"367","endLine":57,"endColumn":26},{"ruleId":"365","severity":1,"message":"366","line":62,"column":13,"nodeType":"367","endLine":62,"endColumn":24},{"ruleId":"365","severity":1,"message":"366","line":50,"column":13,"nodeType":"367","endLine":50,"endColumn":26},{"ruleId":"365","severity":1,"message":"366","line":58,"column":13,"nodeType":"367","endLine":58,"endColumn":24},"no-native-reassign",["419"],"no-negated-in-lhs",["420"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.name' and 'removeCookie'. Either include them or remove the dependency array.","ArrayExpression",["421"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["422"],["419"],["420"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'cookies', 'dispatch', 'history', and 'removeCookie'. Either include them or remove the dependency array.",["423"],["419"],["420"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN",["419"],["420"],"'useCallback' is defined but never used.","'useState' is defined but never used.","React Hook useCallback has missing dependencies: 'feedback' and 'product'. Either include them or remove the dependency array. You can also do a functional update 'setFeedback(f => ...)' if you only need 'feedback' in the 'setFeedback' call.",["424"],"'onBlur' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'initCheck'. Either include them or remove the dependency array.",["425"],"'product' is assigned a value but never used.","'uniqid' is defined but never used.","React Hook useEffect has a missing dependency: 'promo'. Either include it or remove the dependency array.",["426"],"React Hook useEffect has missing dependencies: 'checkboxDiscount' and 'dispatch'. Either include them or remove the dependency array.",["427"],"React Hook useEffect has missing dependencies: 'checkboxPromo' and 'dispatch'. Either include them or remove the dependency array.",["428"],"'selectTitle' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'firstUserPromo', 'list', and 'userData'. Either include them or remove the dependency array.",["429"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"430","text":"431"},"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["432"],["433"],["434"],"'nameFilter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'externalClick'. Either include it or remove the dependency array.",["435"],"'_createCatalogItem' is defined but never used.","'name' is assigned a value but never used.",["436"],"no-global-assign","no-unsafe-negation",{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},[1048,1048],"()",{"desc":"455","fix":"456"},{"desc":"443","fix":"457"},{"desc":"445","fix":"458"},{"desc":"459","fix":"460"},{"desc":"455","fix":"461"},"Update the dependencies array to be: [cookies.name, removeCookie]",{"range":"462","text":"463"},"Update the dependencies array to be: [login, token]",{"range":"464","text":"465"},"Update the dependencies array to be: [cookies, dispatch, history, removeCookie]",{"range":"466","text":"467"},"Update the dependencies array to be: [feedback, product]",{"range":"468","text":"469"},"Update the dependencies array to be: [dispatch, initCheck]",{"range":"470","text":"471"},"Update the dependencies array to be: [listPromo, promo]",{"range":"472","text":"473"},"Update the dependencies array to be: [checkboxDiscount, dispatch]",{"range":"474","text":"475"},"Update the dependencies array to be: [checkboxPromo, dispatch]",{"range":"476","text":"477"},"Update the dependencies array to be: [firstUserPromo, list, userData]",{"range":"478","text":"479"},"Update the dependencies array to be: [dispatch]",{"range":"480","text":"481"},{"range":"482","text":"469"},{"range":"483","text":"471"},"Update the dependencies array to be: [externalClick]",{"range":"484","text":"485"},{"range":"486","text":"481"},[1374,1376],"[cookies.name, removeCookie]",[570,577],"[login, token]",[1454,1456],"[cookies, dispatch, history, removeCookie]",[1009,1011],"[feedback, product]",[1437,1439],"[dispatch, initCheck]",[1228,1239],"[listPromo, promo]",[1377,1379],"[checkboxDiscount, dispatch]",[1471,1473],"[checkboxPromo, dispatch]",[814,816],"[firstUserPromo, list, userData]",[697,699],"[dispatch]",[969,971],[1143,1145],[885,887],"[externalClick]",[538,540]]